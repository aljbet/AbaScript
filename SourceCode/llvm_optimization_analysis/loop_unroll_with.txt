LLVM IR
=========
; ModuleID = 'AbaScript'
source_filename = "AbaScript"

@0 = private unnamed_addr constant [6 x i8] c"%I64d\00", align 1

define i32 @"$print"(i64 %x) {
entry:
  %0 = alloca i64, align 8
  store i64 %x, ptr %0, align 4
  %1 = bitcast i32 4096 to i32
  %mallocsize = mul i32 %1, ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32)
  %malloccall = tail call ptr @malloc(i32 %mallocsize)
  %2 = bitcast ptr %malloccall to ptr
  %3 = load i64, ptr %0, align 4
  %4 = call i32 (ptr, ptr, ...) @sprintf(ptr %2, ptr @0, i64 %3)
  %5 = call i32 @puts(ptr %2)
  tail call void @free(ptr %2)
  ret i32 0
declare i32 @puts(ptr)

declare noalias ptr @malloc(i32)

declare i32 @sprintf(ptr, ptr, ...)

declare void @free(ptr)

define i64 @main() {
entry:
  %0 = trunc i64 10 to i32
  %mallocsize = mul i32 %0, ptrtoint (ptr getelementptr (i64, ptr null, i32 1) t
                                                                               to i32)
  %malloccall = tail call ptr @malloc(i32 %mallocsize)
  %1 = bitcast ptr %malloccall to ptr
  %abas = alloca i64, align 8
  store ptr %1, ptr %abas, align 8
  br label %forCond

forCond:                                          ; preds = %entry
  br label %forBody

forBody:                                          ; preds = %forCond
  %2 = load ptr, ptr %abas, align 8
  store i64 10, ptr %2, align 4
  br label %forInc

forInc:                                           ; preds = %forBody
  br label %forBody.1

forBody.1:                                        ; preds = %forInc
  %3 = load ptr, ptr %abas, align 8
  %4 = getelementptr i64, ptr %3, i64 1
  store i64 9, ptr %4, align 4
  br label %forInc.1

forInc.1:                                         ; preds = %forBody.1
  br label %forBody.2

forBody.2:                                        ; preds = %forInc.1
  %5 = load ptr, ptr %abas, align 8
  %6 = getelementptr i64, ptr %5, i64 2
  store i64 8, ptr %6, align 4
  br label %forInc.2

forInc.2:                                         ; preds = %forBody.2
  br label %forBody.3

forBody.3:                                        ; preds = %forInc.2
  %7 = load ptr, ptr %abas, align 8
  %8 = getelementptr i64, ptr %7, i64 3
  store i64 7, ptr %8, align 4
  br label %forInc.3

forInc.3:                                         ; preds = %forBody.3
  br label %forBody.4

forBody.4:                                        ; preds = %forInc.3
  %9 = load ptr, ptr %abas, align 8
  %10 = getelementptr i64, ptr %9, i64 4
  store i64 6, ptr %10, align 4
  br label %forInc.4

forInc.4:                                         ; preds = %forBody.4
  br label %forBody.5

forBody.5:                                        ; preds = %forInc.4
  %11 = load ptr, ptr %abas, align 8
  %12 = getelementptr i64, ptr %11, i64 5
  store i64 5, ptr %12, align 4
  br label %forInc.5

forInc.5:                                         ; preds = %forBody.5
  br label %forBody.6

forBody.6:                                        ; preds = %forInc.5
  %13 = load ptr, ptr %abas, align 8
  %14 = getelementptr i64, ptr %13, i64 6
  store i64 4, ptr %14, align 4
  br label %forInc.6

forInc.6:                                         ; preds = %forBody.6
  br label %forBody.7

forBody.7:                                        ; preds = %forInc.6
  %15 = load ptr, ptr %abas, align 8
  %16 = getelementptr i64, ptr %15, i64 7
  store i64 3, ptr %16, align 4
  br label %forInc.7

forInc.7:                                         ; preds = %forBody.7
  br label %forBody.8

forBody.8:                                        ; preds = %forInc.7
  %17 = load ptr, ptr %abas, align 8
  %18 = getelementptr i64, ptr %17, i64 8
  store i64 2, ptr %18, align 4
  br label %forInc.8

forInc.8:                                         ; preds = %forBody.8
  br label %forBody.9

forBody.9:                                        ; preds = %forInc.8
  %19 = load ptr, ptr %abas, align 8
  %20 = getelementptr i64, ptr %19, i64 9
  store i64 1, ptr %20, align 4
  br label %forInc.9

forInc.9:                                         ; preds = %forBody.9
  br i1 false, label %forBody.10, label %afterFor

forBody.10:                                       ; preds = %forInc.9
  %21 = load ptr, ptr %abas, align 8
  %22 = getelementptr i64, ptr %21, i64 10
  store i64 0, ptr %22, align 4
  br label %forInc.10

forInc.10:                                        ; preds = %forBody.10
  unreachable

afterFor:                                         ; preds = %forInc.9
  %23 = sub i64 10, 1
  br label %forCond1

forCond1:                                         ; preds = %forInc3, %afterFor 
  %i.1 = phi i64 [ %23, %afterFor ], [ %25, %forInc3 ]
  %24 = icmp sle i64 0, %i.1
  br i1 %24, label %forBody2, label %afterFor4

forBody2:                                         ; preds = %forCond1
  br label %forCond5

forInc3:                                          ; preds = %afterFor8
  %25 = sub i64 %i.1, 1
  br label %forCond1

afterFor4:                                        ; preds = %forCond1
  br label %forCond9

forCond5:                                         ; preds = %forInc7, %forBody2 
  %j.0 = phi i64 [ 0, %forBody2 ], [ %35, %forInc7 ]
  %26 = icmp slt i64 %j.0, %i.1
  br i1 %26, label %forBody6, label %afterFor8

forBody6:                                         ; preds = %forCond5
  %27 = load ptr, ptr %abas, align 8
  %28 = getelementptr i64, ptr %27, i64 %j.0
  %29 = load i64, ptr %28, align 4
  %30 = add i64 %j.0, 1
  %31 = load ptr, ptr %abas, align 8
  %32 = getelementptr i64, ptr %31, i64 %30
  %33 = load i64, ptr %32, align 4
  %34 = icmp slt i64 %33, %29
  %ifcond = icmp ne i1 %34, false
  br i1 %ifcond, label %then, label %else

forInc7:                                          ; preds = %merge
  %35 = add i64 %j.0, 1
  br label %forCond5

afterFor8:                                        ; preds = %forCond5
  br label %forInc3

then:                                             ; preds = %forBody6
  %36 = load ptr, ptr %abas, align 8
  %37 = getelementptr i64, ptr %36, i64 %j.0
  %38 = load i64, ptr %37, align 4
  %39 = add i64 %j.0, 1
  %40 = load ptr, ptr %abas, align 8
  %41 = getelementptr i64, ptr %40, i64 %39
  %42 = load i64, ptr %41, align 4
  %43 = load ptr, ptr %abas, align 8
  %44 = getelementptr i64, ptr %43, i64 %j.0
  store i64 %42, ptr %44, align 4
  %45 = add i64 %j.0, 1
  %46 = load ptr, ptr %abas, align 8
  %47 = getelementptr i64, ptr %46, i64 %45
  store i64 %38, ptr %47, align 4
  br label %merge

else:                                             ; preds = %forBody6
  br label %merge

merge:                                            ; preds = %else, %then        
  br label %forInc7

forCond9:                                         ; preds = %afterFor4
  br label %forBody10

forBody10:                                        ; preds = %forCond9
  %48 = load ptr, ptr %abas, align 8
  %49 = load i64, ptr %48, align 4
  %50 = call i32 @"$print"(i64 %49)
  br label %forInc11

forInc11:                                         ; preds = %forBody10
  br label %forBody10.1

forBody10.1:                                      ; preds = %forInc11
  %51 = load ptr, ptr %abas, align 8
  %52 = getelementptr i64, ptr %51, i64 1
  %53 = load i64, ptr %52, align 4
  %54 = call i32 @"$print"(i64 %53)
  br label %forInc11.1

forInc11.1:                                       ; preds = %forBody10.1        
  br label %forBody10.2

forBody10.2:                                      ; preds = %forInc11.1
  %55 = load ptr, ptr %abas, align 8
  %56 = getelementptr i64, ptr %55, i64 2
  %57 = load i64, ptr %56, align 4
  %58 = call i32 @"$print"(i64 %57)
  br label %forInc11.2

forInc11.2:                                       ; preds = %forBody10.2        
  br label %forBody10.3

forBody10.3:                                      ; preds = %forInc11.2
  %59 = load ptr, ptr %abas, align 8
  %60 = getelementptr i64, ptr %59, i64 3
  %61 = load i64, ptr %60, align 4
  %62 = call i32 @"$print"(i64 %61)
  br label %forInc11.3

forInc11.3:                                       ; preds = %forBody10.3        
  br label %forBody10.4

forBody10.4:                                      ; preds = %forInc11.3
  %63 = load ptr, ptr %abas, align 8
  %64 = getelementptr i64, ptr %63, i64 4
  %65 = load i64, ptr %64, align 4
  %66 = call i32 @"$print"(i64 %65)
  br label %forInc11.4

forInc11.4:                                       ; preds = %forBody10.4        
  br label %forBody10.5

forBody10.5:                                      ; preds = %forInc11.4
  %67 = load ptr, ptr %abas, align 8
  %68 = getelementptr i64, ptr %67, i64 5
  %69 = load i64, ptr %68, align 4
  %70 = call i32 @"$print"(i64 %69)
  br label %forInc11.5

forInc11.5:                                       ; preds = %forBody10.5        
  br label %forBody10.6

forBody10.6:                                      ; preds = %forInc11.5
  %71 = load ptr, ptr %abas, align 8
  %72 = getelementptr i64, ptr %71, i64 6
  %73 = load i64, ptr %72, align 4
  %74 = call i32 @"$print"(i64 %73)
  br label %forInc11.6

forInc11.6:                                       ; preds = %forBody10.6        
  br label %forBody10.7

forBody10.7:                                      ; preds = %forInc11.6
  %75 = load ptr, ptr %abas, align 8
  %76 = getelementptr i64, ptr %75, i64 7
  %77 = load i64, ptr %76, align 4
  %78 = call i32 @"$print"(i64 %77)
  br label %forInc11.7

forInc11.7:                                       ; preds = %forBody10.7        
  br label %forBody10.8

forBody10.8:                                      ; preds = %forInc11.7
  %79 = load ptr, ptr %abas, align 8
  %80 = getelementptr i64, ptr %79, i64 8
  %81 = load i64, ptr %80, align 4
  %82 = call i32 @"$print"(i64 %81)
  br label %forInc11.8

forInc11.8:                                       ; preds = %forBody10.8        
  br label %forBody10.9

forBody10.9:                                      ; preds = %forInc11.8
  %83 = load ptr, ptr %abas, align 8
  %84 = getelementptr i64, ptr %83, i64 9
  %85 = load i64, ptr %84, align 4
  %86 = call i32 @"$print"(i64 %85)
  br label %forInc11.9

forInc11.9:                                       ; preds = %forBody10.9        
  br i1 false, label %forBody10.10, label %afterFor12

forBody10.10:                                     ; preds = %forInc11.9
  %87 = load ptr, ptr %abas, align 8
  %88 = getelementptr i64, ptr %87, i64 10
  %89 = load i64, ptr %88, align 4
  %90 = call i32 @"$print"(i64 %89)
  br label %forInc11.10

forInc11.10:                                      ; preds = %forBody10.10       
  unreachable

afterFor12:                                       ; preds = %forInc11.9
  ret i64 0
}